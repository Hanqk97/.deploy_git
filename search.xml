<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux_Note</title>
      <link href="/2023/01/13/Linux-Note/"/>
      <url>/2023/01/13/Linux-Note/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Linux-Note"><a href="#Linux-Note" class="headerlink" title="Linux Note"></a>Linux Note</h1><p><strong>Refer</strong>:  <a href="https://linuxsurvival.com/">linuxsurvival.com</a></p><h1 id="Commands"><a href="#Commands" class="headerlink" title="Commands"></a>Commands</h1><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a><code>ls</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><code>ls</code> command is used to list the contents of a directory. Linux is case-sensitive. In other words, if you type “LS” instead of “ls”, Linux will not recognize the command.</p><h2 id="ls-l"><a href="#ls-l" class="headerlink" title="ls -l"></a><code>ls -l</code></h2><p><img src="/../images/md_source/ls-l.png" alt="ls-l"></p><ul><li><p>The first character will almost always be either a ‘-‘, which means it’s a file, or a ‘d’, which means it’s a directory. In our example, all three of them are files.</p></li><li><p>The next nine characters (rw-r–r–) show the security.<br>  <img src="/../images/md_source/ls-l2.png" alt="ls-l"></p><ul><li>The ‘r’ means you can “read” the file’s contents.</li><li>The ‘w’ means you can “write”, or modify, the file’s contents.</li><li>The ‘x’ means you can “execute” the file. </li><li>If any of the “rwx” characters is replaced by a ‘-‘, then that permission has been revoked.</li><li>The first three characters are the owner’s (keeper) permissions, the following three characters are the group (prim) members’ permissions and the last three characters are the permissions for anyone referred to as “World”.</li></ul></li><li><p>The next column shows the owner of the file. In our imaginary zoo, your UserID is “keeper”.</p></li><li><p>The next column shows the group owner of the file. Recall that we want to give the “prim” group of people special access to these files.</p></li><li><p>The next column shows the size of the file in bytes.</p></li><li><p>The next column shows the time the file was last modified (in reality, it would also show the date).</p></li><li><p>The final column gives the filename.</p></li></ul><h2 id="more"><a href="#more" class="headerlink" title="more"></a><code>more</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP blog_backups % more package.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hexo-site&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0.0.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;private&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;build&quot;</span>: <span class="string">&quot;hexo generate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;clean&quot;</span>: <span class="string">&quot;hexo clean&quot;</span>,</span><br><span class="line">    <span class="string">&quot;deploy&quot;</span>: <span class="string">&quot;hexo deploy&quot;</span>,</span><br><span class="line">    <span class="string">&quot;server&quot;</span>: <span class="string">&quot;hexo server&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;hexo&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;6.3.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;aplayer&quot;</span>: <span class="string">&quot;^1.10.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo&quot;</span>: <span class="string">&quot;^6.3.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-deployer-git&quot;</span>: <span class="string">&quot;^3.0.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-generator-archive&quot;</span>: <span class="string">&quot;^2.0.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-generator-category&quot;</span>: <span class="string">&quot;^2.0.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-generator-index&quot;</span>: <span class="string">&quot;^3.0.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-generator-search&quot;</span>: <span class="string">&quot;^2.4.3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-generator-tag&quot;</span>: <span class="string">&quot;^2.0.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-renderer-ejs&quot;</span>: <span class="string">&quot;^2.0.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-renderer-marked&quot;</span>: <span class="string">&quot;^6.0.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-renderer-pug&quot;</span>: <span class="string">&quot;^3.0.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-renderer-stylus&quot;</span>: <span class="string">&quot;^2.1.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-server&quot;</span>: <span class="string">&quot;^3.0.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-tag-aplayer&quot;</span>: <span class="string">&quot;^3.0.4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-theme-butterfly&quot;</span>: <span class="string">&quot;^4.5.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-theme-landscape&quot;</span>: <span class="string">&quot;^0.0.3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-wordcount&quot;</span>: <span class="string">&quot;^6.0.1&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <code>more</code> command is used to view the contents of a file. </p><h2 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a><code>mkdir</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">mkdir</span> <span class="built_in">test</span></span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">ls</span></span><br><span class="line">LICENSEdb.jsonpublic<span class="built_in">test</span></span><br><span class="line">README.mdnode_modulesscaffoldsthemes</span><br><span class="line">_config.butterfly.ymlpackage-lock.jsonscripts</span><br><span class="line">_config.ymlpackage.json<span class="built_in">source</span></span><br></pre></td></tr></table></figure><p><code>mkdir</code> is the command to create a directory  which is short for “make directory”.</p><h2 id="mv"><a href="#mv" class="headerlink" title="mv"></a><code>mv</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">ls</span></span><br><span class="line">LICENSEdb.jsonpublic<span class="built_in">test</span></span><br><span class="line">README.mdnode_modulesscaffoldsthemes</span><br><span class="line">_config.butterfly.ymlpackage-lock.jsonscripts</span><br><span class="line">_config.ymlpackage.json<span class="built_in">source</span></span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">mv</span> <span class="built_in">test</span> project</span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">ls</span></span><br><span class="line">LICENSEdb.jsonproject<span class="built_in">source</span></span><br><span class="line">README.mdnode_modulespublicthemes</span><br><span class="line">_config.butterfly.ymlpackage-lock.jsonscaffolds</span><br><span class="line">_config.ymlpackage.jsonscripts</span><br></pre></td></tr></table></figure><p><code>mv</code> command is used to move file. <code>mv filename target_directory</code><br>Renaming files is simply a case of “moving” a file from one name to another. <code>mv filename newname</code></p><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a><code>cd</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">cd</span> blog_backups</span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % </span><br><span class="line"></span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">cd</span> ..</span><br><span class="line">(base) hanqichen@HanqideMBP project % </span><br></pre></td></tr></table></figure><p><code>cd</code> is the command to change directory.<br><code>cd ..</code>:  <code>..</code>, it refers to the directory above your current directory.</p><h2 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a><code>pwd</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">pwd</span></span><br><span class="line">/Users/hanqichen/project/blog_backups</span><br></pre></td></tr></table></figure><p><code>pwd</code> command is used to “print working directory”.</p><h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a><code>cp</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">ls</span></span><br><span class="line">JavaBlockChainWashU-CourseWork-330S-503Spbkey.txt</span><br><span class="line">Simple-Quiz-JavaScriptblog_backupstest_new</span><br><span class="line">Simple-Weather-App-Javascriptgeneral token.txt</span><br><span class="line">Tempor Testindividual_instance.pem</span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">cp</span> pbkey.txt blog_backups</span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">cd</span> blog_backups</span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">ls</span></span><br><span class="line">LICENSEdb.jsonpbkey.txt<span class="built_in">source</span></span><br><span class="line">README.mdnode_modulespublicthemes</span><br><span class="line">_config.butterfly.ymlpackage-lock.jsonscaffolds</span><br><span class="line">_config.ymlpackage.jsonscripts</span><br></pre></td></tr></table></figure><p><code>cp</code> command is used to copy file (not directory).</p><h2 id="cp-r"><a href="#cp-r" class="headerlink" title="cp -r"></a><code>cp -r</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">ls</span></span><br><span class="line">blog_backups<span class="built_in">test</span></span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">cd</span> blog_backups</span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">ls</span></span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">cd</span> ..</span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">cp</span> -r <span class="built_in">test</span> blog_backups</span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">cd</span> blog_backups</span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><code>cp -r</code> command is used to copy the directories.</p><h2 id="rm"><a href="#rm" class="headerlink" title="rm"></a><code>rm</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">ls</span></span><br><span class="line">LICENSEdb.jsonpbkey.txt<span class="built_in">source</span></span><br><span class="line">README.mdnode_modulespublicthemes</span><br><span class="line">_config.butterfly.ymlpackage-lock.jsonscaffolds</span><br><span class="line">_config.ymlpackage.jsonscripts</span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">rm</span> pbkey.txt</span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">ls</span></span><br><span class="line">LICENSEdb.jsonpublicthemes</span><br><span class="line">README.mdnode_modulesscaffolds</span><br><span class="line">_config.butterfly.ymlpackage-lock.jsonscripts</span><br><span class="line">_config.ymlpackage.json<span class="built_in">source</span></span><br></pre></td></tr></table></figure><p><code>rm</code> command is used to remove file.</p><h2 id="rmdir"><a href="#rmdir" class="headerlink" title="rmdir"></a><code>rmdir</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">ls</span></span><br><span class="line">JavaBlockChainWashU-CourseWork-330S-503Spbkey.txt</span><br><span class="line">Simple-Quiz-JavaScriptblog_backupstest_new</span><br><span class="line">Simple-Weather-App-Javascriptgeneral token.txt</span><br><span class="line">Tempor Testindividual_instance.pem</span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">rmdir</span> test_new</span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">ls</span></span><br><span class="line">JavaBlockChainTempor Testgeneral token.txt</span><br><span class="line">Simple-Quiz-JavaScriptWashU-CourseWork-330S-503Sindividual_instance.pem</span><br><span class="line">Simple-Weather-App-Javascriptblog_backupspbkey.txt</span><br></pre></td></tr></table></figure><p><code>rmdir</code> command is used to remove empty directory.</p><h2 id="rm-r"><a href="#rm-r" class="headerlink" title="rm -r"></a><code>rm -r</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">rmdir</span> <span class="built_in">test</span></span><br><span class="line"><span class="built_in">rmdir</span>: <span class="built_in">test</span>: Directory not empty</span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">rm</span> -r <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><code>rm -r</code> command is used to remove directories that contains at least one file.</p><h2 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a><code>chmod</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">ls</span> -l</span><br><span class="line">drwxr-xr-x   2 hanqichen  staff    64 Jan 14 18:35 <span class="built_in">test</span></span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">chmod</span> ugo+rwx <span class="built_in">test</span></span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">ls</span> -l</span><br><span class="line">drwxrwxrwx   2 hanqichen  staff    64 Jan 14 18:35 <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><code>chmod</code> command is used to change the security “mode” of the file.</p><p>The first argument you give to the “chmod” command is <code>u</code>, <code>g</code>, <code>o</code>,  (<code>u</code>: owner, <code>g</code>: group, <code>o</code>:others ) or a combination of them which specifies which of the three “rwx” sets you want to modify.</p><p>Type a <code>+</code> to say that “adding” a permission or <code>-</code> to say that “removing” a permission.</p><p>Then type the permission type from <code>rwx</code> or a combination of them to add permissions.</p><p>Finally, specify which file are changing.</p><p><code>chmod usersets+/-permission_types filename_or_directoryname</code></p><h2 id="groups"><a href="#groups" class="headerlink" title="groups"></a><code>groups</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP ~ % <span class="built_in">groups</span></span><br><span class="line">staff everyone localaccounts _appserverusr admin _appserveradm _lpadmin com.apple.sharepoint.group.1 _appstore _lpoperator _developer _analyticsusers com.apple.access_ftp com.apple.access_screensharing com.apple.access_ssh com.apple.access_remote_ae</span><br></pre></td></tr></table></figure><p><code>groups</code> command is used to get a listing of group memberships.</p><h2 id=""><a href="#" class="headerlink" title="~"></a><code>~</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">pwd</span></span><br><span class="line">/Users/hanqichen/project</span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">cd</span> ~</span><br><span class="line">(base) hanqichen@HanqideMBP ~ % <span class="built_in">pwd</span></span><br><span class="line">/Users/hanqichen</span><br></pre></td></tr></table></figure><p><code>~</code> (Tilde): Home directory of user. The tilde also can be used to specify another user’s home directory. <code>cd ~otherusername</code></p><ul><li>One of the nicest things about using the tilde is that you don’t have to know where anyone’s home directory is located. Sometimes system administrators will move home directories to new locations to alleviate disk space problems. If you always use the tilde, you might not even notice such moves.</li></ul><h2 id="man"><a href="#man" class="headerlink" title="man"></a><code>man</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP ~ % man</span><br><span class="line">What manual page <span class="keyword">do</span> you want?</span><br><span class="line">(base) hanqichen@HanqideMBP ~ % man man </span><br></pre></td></tr></table></figure><p><code>man man</code>: displays the manual pages describing the “man” command.<br>The heading begins with “man(1)”. The “(1)” means that the “man” command is found in Section 1 of the manual. The number of sections in the online manual varies from system to system, but Section 1 is always the “User Commands” section. In fact, unless you are a programmer or a system administrator, you will probably never need to look in any other section.</p><p><code>NAME</code> contains the name of the command and a brief description of what it does.</p><p><code>SYNOPSIS</code> shows the syntax of the command. In the page at right, <code>[-k]</code> refers to all of the possible options to the man command. In this case there is only one. The <code>-k</code> is surrounded by square brackets because it is an optional part of the command. That is, if you do not include it, the command will still function. The meaning of each option is explained in the <code>OPTIONS</code> section below. </p><p><code>keyword ...</code> refers to the possible arguments to the command. Since it is not surrounded by square brackets, it is not optional. That is, you must always include a <code>keyword</code> argument to the <code>man</code> command. The <code>...</code> means that you can specify more than one keyword.</p><p><code>DESCRIPTION</code> gives an overview of the purpose of the command.</p><p><code>OPTIONS</code> lists all of the possible options and arguments for this command and what they do.</p><p><code>SEE ALSO</code> is not of direct importance, but it can be quite useful because it lists commands which have a related purpose.</p><p>After examining this output, it is obvious that the <code>-k</code> option will help you searches for man page descriptions containing specified keywords. <code>man -k special_keywords</code></p><h2 id="finger"><a href="#finger" class="headerlink" title="finger"></a><code>finger</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP ~ % finger hanqichen</span><br><span class="line">Login: hanqichen      Name: Hanqi Chen</span><br><span class="line">Directory: /Users/hanqichen         Shell: /bin/zsh</span><br><span class="line">On since Sun Dec 25 10:07 (CST) on console, idle 20 days 9:29 (messages off)</span><br><span class="line">On since Fri Jan 13 21:08 (CST) on ttys000</span><br><span class="line">No Mail.</span><br><span class="line">No Plan.</span><br></pre></td></tr></table></figure><p><code>finger</code>: show the user information. <code>finger username</code></p><h2 id="find"><a href="#find" class="headerlink" title="find"></a><code>find</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP project % find ~ -name <span class="string">&quot;blog*&quot;</span></span><br></pre></td></tr></table></figure><p><code>find</code> command used to find files.</p><p>The first argument you specify is the directory to start the search from. If “find” always searched the entire tree on a system, it would be very inefficient, so this first argument allows you to limit your search. In the above example, it will be started from your home directory (<code>~</code>) and will then search the entire tree under it. </p><p><code>.</code> which represents your current directory.</p><p>The <code>-name</code> option says that you are searching for a file’s name. At first, this might seem obvious and redundant, but you have to understand just how powerful the “find” command is. You can use it to search for files of a particular size, date, owner, and a variety of other criteria.</p><p>The argument to <code>-name</code> can be as simple as <code>blog_backups</code> if you know that is the exact name of the file. But, if you’re not sure whether the file is called <code>blog</code>, <code>blogs</code>, or even <code>blog-favorite</code>, then you can use a wildcard, like <code>*</code>. However, when you use a wildcard, you need to surround the argument in quotes. If you don’t, you will receive a rude error message.</p><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a><code>cat</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP <span class="built_in">test</span> % <span class="built_in">cat</span> t1.txt</span><br><span class="line">Hello                                                                                                 (base) hanqichen@HanqideMBP <span class="built_in">test</span> % <span class="built_in">cat</span> t2.txt</span><br><span class="line">World!                                                                                                (base) hanqichen@HanqideMBP <span class="built_in">test</span> % <span class="built_in">cat</span> t1.txt t2.txt</span><br><span class="line">HelloWorld!     </span><br></pre></td></tr></table></figure><p><code>cat</code>: The word for “combine” is <code>concatenate</code>. Since that would be a real pain to spell all of the time, the Linux concatenation command is simply <code>cat</code>.  This command can even be used with just one filename argument, in which case, that file’s contents alone will be printed to the screen. In fact, many people use “cat”, rather than <code>more</code>, to display the contents of a file.</p><h2 id="gt-gt-gt"><a href="#gt-gt-gt" class="headerlink" title="&gt; &gt;&gt;"></a><code>&gt;</code> <code>&gt;&gt;</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP <span class="built_in">test</span> % <span class="built_in">cat</span> t1.txt t2.txt &gt; c.txt   </span><br><span class="line">(base) hanqichen@HanqideMBP <span class="built_in">test</span> % <span class="built_in">cat</span> c.txt                </span><br><span class="line">HelloWorld!%                                                                                           (base) hanqichen@HanqideMBP <span class="built_in">test</span> % <span class="built_in">cat</span> t1.txt t2.txt &gt;&gt; c.txt</span><br><span class="line">(base) hanqichen@HanqideMBP <span class="built_in">test</span> % <span class="built_in">cat</span> c.txt                 </span><br><span class="line">HelloWorld!HelloWorld!%    </span><br></pre></td></tr></table></figure><p><code>&gt;</code> <code>&gt;&gt;</code>: send the output from a command such as “cat” to a file, it can use either <code>&gt;</code> or <code>&gt;&gt;</code>.  <code>&gt;</code>would put the contents of <code>t1.txt</code> and <code>t2.txt</code>, one after the other, in a new file called <code>c.txt</code>. You can think of the <code>&gt;</code> as an arrow pointing to where you want the output to go. In the above example, if <code>c.txt</code> already exists, then it will be over-written (i.e. it will be deleted before it is recreated). Sometimes that is what you want, but often you will want to keep the previous contents of a file and simply append to it (add to the end of it). This can be accomplished by using <code>&gt;&gt;</code> rather than<code>&gt;</code>.</p><h2 id="lp"><a href="#lp" class="headerlink" title="lp"></a><code>lp</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lpr  send to printer</span><br><span class="line">lpq  display <span class="built_in">print</span> queue</span><br><span class="line">lprm remove from <span class="built_in">print</span> queue</span><br></pre></td></tr></table></figure><h3 id="lpr"><a href="#lpr" class="headerlink" title="lpr"></a><code>lpr</code></h3><p>The <code>lpr</code> command stands for “line printer”, because when the command was developed, it was assumed that you would be using that type of printer. This, of course, is no longer the case for the majority of Linux users. Now, <code>lpr</code> can be used to send jobs to PostScript printers, plotters, and any other print devices you can think of.</p><p>For example, to send a file named <code>thoughts</code> to the default printer, you would type<code>pr thoughts</code>. To send your file to a printer called <code>hp14</code> rather than the default one, you would type<code>lpr -P hp14 thoughts</code>. The <code>-P</code> stands for “printer”. The printer can have any name that your system administrator chooses, even something like <code>tower-of-babel</code>, if she feels like it. Note that <code>lpr</code> does not produce any output if the print request was successful.</p><h3 id="lpq"><a href="#lpq" class="headerlink" title="lpq"></a><code>lpq</code></h3><p>If you type <code>lpq</code> without any arguments, you will be shown the status of all print jobs in the default print queue. To display all of the print jobs in a different queue, use the <code>-P</code> option, just as you would for the <code>lpr</code> command. </p><p>For example, to check on your print job in the <code>hp14</code> queue, you would type<code>lpq -P hp14</code>.</p><h3 id="lprm"><a href="#lprm" class="headerlink" title="lprm"></a><code>lprm</code></h3><p>The command to remove print jobs is called <code>lprm</code>, which stands for “line printer remove”. </p><p>For example, to remove print job <code>148</code> from print queue <code>hp14</code>, you would type<code> lprm -P hp14 148</code>. (<code>148</code> is the task number that replace the filename)</p><h2 id="df"><a href="#df" class="headerlink" title="df"></a><code>df</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">df</span></span><br><span class="line">Filesystem     512-blocks      Used Available Capacity iused      ifree %iused  Mounted on</span><br><span class="line">/dev/disk3s1s1  965595304  22830936 652633312     4%  348618 3263166560    0%   /</span><br><span class="line">devfs                 394       394         0   100%     682          0  100%   /dev</span><br><span class="line">/dev/disk3s6    965595304   4194344 652633312     1%       2 3263166560    0%   /System/Volumes/VM</span><br><span class="line">/dev/disk3s2    965595304  18169552 652633312     3%    1080 3263166560    0%   /System/Volumes/Preboot</span><br><span class="line">/dev/disk3s4    965595304   1234272 652633312     1%     275 3263166560    0%   /System/Volumes/Update</span><br><span class="line">/dev/disk1s2      1024000     12328    985168     2%       1    4925840    0%   /System/Volumes/xarts</span><br><span class="line">/dev/disk1s1      1024000     12544    985168     2%      32    4925840    0%   /System/Volumes/iSCPreboot</span><br><span class="line">/dev/disk1s3      1024000      4240    985168     1%      52    4925840    0%   /System/Volumes/Hardware</span><br><span class="line">/dev/disk3s5    965595304 263242968 652633312    29% 1836016 3263166560    0%   /System/Volumes/Data</span><br><span class="line">map auto_home           0         0         0   100%       0          0  100%   /System/Volumes/Data/home</span><br><span class="line">/dev/disk2s1     10485672   3196440   7250400    31%      58   36252000    0%   /System/Volumes/Update/SFR/mnt1</span><br><span class="line">/dev/disk3s1    965595304  22830936 652633312     4%  348576 3263166560    0%   /System/Volumes/Update/mnt1</span><br></pre></td></tr></table></figure><p><code>512-blocks</code>: the total disk size,  <code>Used</code>: the disk space used, and <code>Available</code>: the available disk space.</p><p><code>Use%</code> column shows the percentage of user space that is currently used.</p><p><code>Mounted on</code> column shows where the disks reside in your filesystem tree. </p><p>For special directory, you can use <code>df directoryname</code> such as <code>df ~</code> (home directory), <code>df .</code> (current directory).</p><h2 id="ps-aux"><a href="#ps-aux" class="headerlink" title="ps aux"></a><code>ps aux</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP project % ps aux</span><br><span class="line">USER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND</span><br><span class="line">hanqichen        63878  18.7  0.2 408284128  26288   ??  S    Fri07PM   1:42.40 /System/Library/Framewo</span><br><span class="line">hanqichen          651  11.7  0.2 408306400  38432   ??  S    25Dec22   7:04.67 /usr/libexec/sharingd</span><br><span class="line">_windowserver      380   7.5  0.8 413304176 126480   ??  Ss   25Dec22 703:25.07 /System/Library/Private</span><br><span class="line">hanqichen        64670   5.3  1.2 1592793184 195312   ??  S    Fri09PM  10:20.23 /Applications/Google Ch</span><br><span class="line">hanqichen        64026   4.6  1.0 442920704 170896   ??  S    Fri07PM 100:06.16 /Applications/Google Ch</span><br><span class="line">hanqichen          570   3.9  0.7 410189344 118544   ??  S    25Dec22   2:03.92 /System/Applications/Ut</span><br><span class="line">hanqichen        64044   2.2  0.8 1592694080 128464   ??  S    Fri07PM  40:01.79 /Applications/Google Ch</span><br></pre></td></tr></table></figure><p><code>ps aux</code> command used to examine running programs (or “processes”, in Linux lingo), which stands for “process status”. </p><p><code>USER</code>: the process owner.</p><p><code>PID</code>: the process ID.</p><p><code>START</code>: the date or time when this process started.</p><p><code>TIME</code>: the amount of CPU time used by this process.</p><p><code>COMMAND</code>: the command that started the process.</p><h2 id="-1"><a href="#-1" class="headerlink" title="|"></a><code>|</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> joke-1 joke-2 | lpr -P zephyr</span><br></pre></td></tr></table></figure><p>The output of <code>cat joke-1 joke-2</code> is sent directly to the printer, rather than to a file.</p><p><code>\</code> sends the output of a command as the input to another command. In other words, it “pipes” data from one command to another. </p><h2 id="grap"><a href="#grap" class="headerlink" title="grap"></a><code>grap</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zoo&gt; <span class="built_in">cat</span> joke-1 joke2 | grep rabbit</span><br><span class="line">How <span class="keyword">do</span> you catch a unique rabbit?</span><br><span class="line">How <span class="keyword">do</span> you catch a tame rabbit?</span><br></pre></td></tr></table></figure><p>Above command list only those lines containing the word rabbit in Jester’s joke files.</p><p><code>grep</code> : to find patterns in data.</p><h2 id="kill"><a href="#kill" class="headerlink" title="kill"></a><code>kill</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zoo:-&gt; ps aux | grep rogue</span><br><span class="line">keeper79616:530:05rogue</span><br><span class="line">keeper82517:040:00grep rogue</span><br><span class="line">zoo:-&gt; <span class="built_in">kill</span> 796</span><br></pre></td></tr></table></figure><p><code>kill</code>: to kill a process. <code>kill PID</code></p><p><code>kill -9</code>: to kill a provess immediately. <code>kill -9 PID</code></p><h2 id="clear"><a href="#clear" class="headerlink" title="clear"></a><code>clear</code></h2><p><code>clear</code> is a  command that is used to clear the terminal screen. </p><h1 id="Terms"><a href="#Terms" class="headerlink" title="Terms"></a>Terms</h1><h2 id="pathnames"><a href="#pathnames" class="headerlink" title="pathnames"></a>pathnames</h2><p>Built the pathname by starting at the top of the tree with the “root” (‘&#x2F;‘) and adding upper dictory to it. Then we added a “slash” (‘&#x2F;‘) every time we moved down the tree another level.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP ~ % <span class="built_in">mv</span> /Users/hanqichen/project/test /Users/hanqichen/project/new_test</span><br><span class="line">(base) hanqichen@HanqideMBP ~ % <span class="built_in">cd</span> project</span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">ls</span></span><br><span class="line">JavaBlockChainWashU-CourseWork-330S-503Snew_test</span><br><span class="line">Simple-Quiz-JavaScriptblog_backupspbkey.txt</span><br><span class="line">Simple-Weather-App-Javascriptgeneral token.txt</span><br><span class="line">Tempor Testindividual_instance.pem</span><br></pre></td></tr></table></figure><p>Typing in a full pathname can be tedious, though, especially if you are a long way down the tree. That’s why it is often easier to specify a “relative pathname”. It is called “relative” because it specifies a filename relative to your current location, rather than from the root directory. If you don’t put a ‘&#x2F;‘ at the beginning of a pathname, then Linux knows that you are using a relative pathname.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP ~ % <span class="built_in">mv</span> project/new_test project/test</span><br><span class="line">(base) hanqichen@HanqideMBP ~ % <span class="built_in">cd</span> project</span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">ls</span></span><br><span class="line">JavaBlockChainWashU-CourseWork-330S-503Spbkey.txt</span><br><span class="line">Simple-Quiz-JavaScriptblog_backups<span class="built_in">test</span></span><br><span class="line">Simple-Weather-App-Javascriptgeneral token.txt</span><br><span class="line">Tempor Testindividual_instance.pem</span><br></pre></td></tr></table></figure><p>Recall that “..” refers to the directory above your current directory.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">mv</span> ../test ../test_new</span><br><span class="line">(base) hanqichen@HanqideMBP blog_backups % <span class="built_in">cd</span> ..</span><br><span class="line">(base) hanqichen@HanqideMBP project % <span class="built_in">ls</span></span><br><span class="line">JavaBlockChainWashU-CourseWork-330S-503Spbkey.txt</span><br><span class="line">Simple-Quiz-JavaScriptblog_backupstest_new</span><br><span class="line">Simple-Weather-App-Javascriptgeneral token.txt</span><br><span class="line">Tempor Testindividual_instance.pem</span><br></pre></td></tr></table></figure><h2 id="Wildcard-通配符"><a href="#Wildcard-通配符" class="headerlink" title="Wildcard (通配符)"></a>Wildcard (通配符)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tron&gt; <span class="built_in">ls</span> *</span><br><span class="line">ing sing spat sport tennis</span><br><span class="line">tron&gt; <span class="built_in">ls</span> *ing</span><br><span class="line">ing sing</span><br><span class="line">tron&gt; <span class="built_in">ls</span> sp??t</span><br><span class="line">sport</span><br></pre></td></tr></table></figure><p>A wildcard allows you to specify more than one file at the same time. The ‘<em>‘ matches any number of characters. For example, if you want to execute a command on all files in the current directory, you would specify ‘</em>‘ as the filename. If you want to be more selective and match only files which end in “ing”, you would use “<em>ing”. Note that the ‘</em>‘ can even match zero characters, so “*ing” would match “ing” as well as “sing”.</p><p>The other wildcard, ‘?’, is not used very often, but it can be useful. It matches exactly one character. For example, if you want to match “sport”, but not “spat”, you would use “sp??t”. The first ‘?’ matches the ‘a’ in “spat”, but the second ‘?’ can’t match anything, so “spat” fails.</p><h2 id="Hard-Drives-Tree"><a href="#Hard-Drives-Tree" class="headerlink" title="Hard Drives Tree"></a>Hard Drives Tree</h2><p><img src="/../images/md_source/hd_tree.png" alt="hd_tree"><br>The way that hard drives are handled in Linux can be a difficult concept to grasp for Windows users. In Windows, the hard drives are labelled <code>C:</code>, <code>D:</code>, etc., and each of them has its own directory tree. As you can see in the diagram at top right, there is absolutely no connection between these trees.</p><p>On a Linux system, however, there is only one directory tree. Each hard drive is <code>mounted</code> on a particular directory in that tree. For example, the first hard drive is mounted on <code>/</code>, the root of the tree. Everything contained on that drive has been colored yellow in the diagram at bottom right. The second drive is mounted on <code>/home</code>. That means that any files or directories under <code>/home</code> in the tree will be stored on the second drive rather than on the first one. They are colored blue. Similarly, the third drive has been mounted on <code>/usr</code>. Its contents have been colored green.</p><p>Due to its single-tree approach, the Linux filesystem structure is much more flexible and usable than the Windows structure. </p>]]></content>
      
      
      <categories>
          
          <category> 自学笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 计算机基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-0020</title>
      <link href="/2022/12/24/LeetCode-0020/"/>
      <url>/2022/12/24/LeetCode-0020/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给定一个只包括 ‘(‘，’)’，’{‘，’}’，’[‘，’]’ 的字符串，判断字符串是否有效。</p><p>有效字符串需满足：</p><ul><li><p>左括号必须用相同类型的右括号闭合。</p></li><li><p>左括号必须以正确的顺序闭合。</p></li><li><p>注意空字符串可被认为是有效字符串。</p></li></ul><p><a href="https://leetcode.com/problems/valid-parentheses/">题目链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Example 1:</span><br><span class="line">Input: s = <span class="string">&quot;()&quot;</span></span><br><span class="line">Output: <span class="literal">true</span></span><br><span class="line">Example 2:</span><br><span class="line">Input: s = <span class="string">&quot;()[]&#123;&#125;&quot;</span></span><br><span class="line">Output: <span class="literal">true</span></span><br><span class="line">Example 3:</span><br><span class="line">Input: s = <span class="string">&quot;(]&quot;</span></span><br><span class="line">Output: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>此题也被引用在编译器原理中，如以下Linux命令最终进入a目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> a/b/c/../../</span><br></pre></td></tr></table></figure><ol><li>第一种情况，字符串里左方向的括号多余了 ，所以不匹配。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#123;[]&#125;()</span><br></pre></td></tr></table></figure>第一种情况：已经遍历完了字符串，但是栈不为空，说明有相应的左括号没有右括号来匹配，所以return false</li><li>第二种情况，括号没有多余，但是 括号的类型没有匹配上。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;[(&#125;]&#125;</span><br></pre></td></tr></table></figure>第二种情况：遍历字符串匹配的过程中，发现栈里没有要匹配的字符。所以return false</li><li>第三种情况，字符串里右方向的括号多余了，所以不匹配。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#123;[]&#125;))))</span><br></pre></td></tr></table></figure></li></ol><p>第三种情况：遍历字符串匹配的过程中，栈已经为空了，没有匹配的字符了，说明右括号没有找到对应的左括号return false</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        Deque&lt;Character&gt; deque = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">char</span> ch;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            ch = s.charAt(i);</span><br><span class="line">            <span class="comment">//碰到左括号，就把相应的右括号入栈</span></span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line">                deque.push(<span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;&#123;&#x27;</span>) &#123;</span><br><span class="line">                deque.push(<span class="string">&#x27;&#125;&#x27;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;[&#x27;</span>) &#123;</span><br><span class="line">                deque.push(<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (deque.isEmpty() || deque.peek() != ch) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;<span class="comment">//如果是右括号判断是否和栈顶元素匹配</span></span><br><span class="line">                deque.pop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//最后判断栈中元素是否匹配</span></span><br><span class="line">        <span class="keyword">return</span> deque.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Time complexity : O(n) because we simply traverse the given string one character at a time and push and pop operations on a stack take O(1) time.</li><li>Space complexity : O(n)) as we push all opening brackets onto the stack and in the worst case, we will end up pushing all the brackets onto the stack. e.g. <code>((((((((((</code>.</li></ul>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> 代码随想录 </tag>
            
            <tag> 栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雀魂役种表</title>
      <link href="/2022/12/20/%E9%9B%80%E9%AD%82%E5%BD%B9%E7%A7%8D%E8%A1%A8/"/>
      <url>/2022/12/20/%E9%9B%80%E9%AD%82%E5%BD%B9%E7%A7%8D%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="一番"><a href="#一番" class="headerlink" title="一番"></a>一番</h1><p><img src="https://img1.ali213.net/glpic/2021/12/07/584_2021120742329463.jpg" alt="游侠网2"></p><h1 id="二番"><a href="#二番" class="headerlink" title="二番"></a>二番</h1><p><img src="https://img1.ali213.net/glpic/2021/12/07/584_2021120742329286.jpg" alt="游侠网3"></p><h1 id="三番-六番-双倍役满-流局"><a href="#三番-六番-双倍役满-流局" class="headerlink" title="三番 六番 双倍役满 流局"></a>三番 六番 双倍役满 流局</h1><p><img src="https://img1.ali213.net/glpic/2021/12/07/584_2021120742329239.jpg" alt="游侠网4"></p><h1 id="满贯-役满"><a href="#满贯-役满" class="headerlink" title="满贯 役满"></a>满贯 役满</h1><p><img src="https://img1.ali213.net/glpic/2021/12/07/584_202112074232978.jpg" alt="游侠网5"></p>]]></content>
      
      
      <categories>
          
          <category> Game </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> 雀魂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-0059 螺旋矩阵II</title>
      <link href="/2022/12/19/LeetCode-0059/"/>
      <url>/2022/12/19/LeetCode-0059/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://leetcode.com/problems/spiral-matrix-ii/">题目链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">示例: 输入: 3 输出: [ [ 1, 2, 3 ], [ 8, 9, 4 ], [ 7, 6, 5 ] ]</span><br></pre></td></tr></table></figure><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>本题考查对边界条件的把握，需要坚持<strong>循环不变量原则</strong>，此处可以选择每条边都是左闭右开的情况即每行（或列）最后一个元素为下一条线的起始点。<br><img src="https://img2022.cnblogs.com/blog/2987988/202209/2987988-20220924020556041-1042392343.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[][] generateMatrix(<span class="type">int</span> n) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">loop</span> <span class="operator">=</span> <span class="number">0</span>;  <span class="comment">// 控制循环次数</span></span><br><span class="line">        <span class="type">int</span>[][] res = <span class="keyword">new</span> <span class="title class_">int</span>[n][n];</span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">0</span>;  <span class="comment">// 每次循环的开始点(start, start)</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;  <span class="comment">// 定义填充数字</span></span><br><span class="line">        <span class="type">int</span> i, j;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (loop++ &lt; n / <span class="number">2</span>) &#123; <span class="comment">// 判断边界后，loop从1开始。n每增加2循环增加一圈</span></span><br><span class="line">            <span class="comment">// 模拟上侧从左到右</span></span><br><span class="line">            <span class="keyword">for</span> (j = start; j &lt; n - loop; j++) &#123;</span><br><span class="line">                res[start][j] = count++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 模拟右侧从上到下</span></span><br><span class="line">            <span class="keyword">for</span> (i = start; i &lt; n - loop; i++) &#123;</span><br><span class="line">                res[i][j] = count++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 模拟下侧从右到左</span></span><br><span class="line">            <span class="keyword">for</span> (; j &gt;= loop; j--) &#123;</span><br><span class="line">                res[i][j] = count++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 模拟左侧从下到上</span></span><br><span class="line">            <span class="keyword">for</span> (; i &gt;= loop; i--) &#123;</span><br><span class="line">                res[i][j] = count++;</span><br><span class="line">            &#125;</span><br><span class="line">            start++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">1</span>) &#123;<span class="comment">//对于n为奇数的情况需要填充中间点</span></span><br><span class="line">            res[start][start] = count;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> 代码随想录 </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-0209 长度最小的子数组</title>
      <link href="/2022/12/19/LeetCode-0209/"/>
      <url>/2022/12/19/LeetCode-0209/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给定一个含有 n 个正整数的数组和一个正整数 s ，找出该数组中满足其和 ≥ s 的长度最小的 连续 子数组，并返回其长度。如果不存在符合条件的子数组，返回 0。<br><a href="https://leetcode.com/problems/minimum-size-subarray-sum/">题目链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">输入：s = 7, nums = [2,3,1,2,4,3] 输出：2 解释：子数组 [4,3] 是该条件下的长度最小的子数组。</span><br></pre></td></tr></table></figure><h1 id="暴力解法"><a href="#暴力解法" class="headerlink" title="暴力解法"></a>暴力解法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minSubArrayLen</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt; n; j++) &#123;</span><br><span class="line">                sum += nums[j];</span><br><span class="line">                <span class="keyword">if</span> (sum &gt;= s) &#123;</span><br><span class="line">                    ans = Math.min(ans, j - i + <span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans == Integer.MAX_VALUE ? <span class="number">0</span> : ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>时间复杂度：O(n^2)</li><li>空间复杂度：O(1)</li></ul><h1 id="滑动窗口法"><a href="#滑动窗口法" class="headerlink" title="滑动窗口法"></a>滑动窗口法</h1><p><strong>滑动窗口，就是不断的调节子序列的起始位置和终止位置，从而得出我们要想的结果。</strong><br>若其实索引选择窗口的起始位置，则需要另一个循环来遍历它的终止位置，因此其实索引选择窗口的终止位置。<br>首先不断增加终止索引（right）直到总会大于目标值，然后再将启示索引右移移缩小窗口。<br><img src="https://img2022.cnblogs.com/blog/2987988/202209/2987988-20220924012442569-1689688364.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="comment">// 滑动窗口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minSubArrayLen</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> <span class="number">0</span>; right &lt; nums.length; right++) &#123;</span><br><span class="line">            sum += nums[right];</span><br><span class="line">            <span class="keyword">while</span> (sum &gt;= s) &#123;</span><br><span class="line">                result = Math.min(result, right - left + <span class="number">1</span>);</span><br><span class="line">                sum -= nums[left++];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result == Integer.MAX_VALUE ? <span class="number">0</span> : result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>while循环中，每个元素只是一进一出，没有其他操作，所以操作次数永远是2，故总的时间复杂度为2n。</p><ul><li>时间复杂度：O(n)</li><li>空间复杂度：O(1)</li></ul>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> 代码随想录 </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-0977 有序数组的平方</title>
      <link href="/2022/12/19/LeetCode-0977/"/>
      <url>/2022/12/19/LeetCode-0977/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。<br><a href="https://leetcode.com/problems/squares-of-a-sorted-array/">题目链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">示例 1： 输入：nums = [-4,-1,0,3,10] 输出：[0,1,9,16,100] 解释：平方后，数组变为 [16,1,0,9,100]，排序后，数组变为 [0,1,9,16,100]</span><br><span class="line">示例 2： 输入：nums = [-7,-3,2,3,11] 输出：[4,9,9,49,121]</span><br></pre></td></tr></table></figure><h1 id="暴力排序"><a href="#暴力排序" class="headerlink" title="暴力排序"></a>暴力排序</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">　　<span class="keyword">public</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">　　　　<span class="type">int</span>[] ans = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">　　　　<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; ++i) &#123;</span><br><span class="line">　　　　　　ans[i] = nums[i] * nums[i];</span><br><span class="line">　　　　&#125;</span><br><span class="line">　　　　Arrays.sort(ans);</span><br><span class="line">　　　　<span class="keyword">return</span> ans;</span><br><span class="line">　　&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>时间复杂度：O(nlogn)，其中 n 是数组 nums 的长度。</li><li>空间复杂度：O(logn)。除了存储答案的数组以外，我们需要 O(logn) 的栈空间进行排序。</li></ul><h1 id="双指针法"><a href="#双指针法" class="headerlink" title="双指针法"></a>双指针法</h1><p>数组平方的最大值就在数组的两端，不是最左边就是最右边，不可能是中间。所以两个指针指向数组两端，根据他们平方和的大小依次将值由后到前赋给新数组，然后返回新数组。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[] result = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> result.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[left] * nums[left] &gt; nums[right] * nums[right]) &#123;</span><br><span class="line">                <span class="comment">// 正数的相对位置是不变的， 需要调整的是负数平方后的相对位置</span></span><br><span class="line">                result[index--] = nums[left] * nums[left];</span><br><span class="line">                ++left;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                result[index--] = nums[right] * nums[right];</span><br><span class="line">                --right;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>时间复杂度：O(n)，其中 nn 是数组 nums 的长度。</li><li>空间复杂度：O(1)。除了存储答案的数组以外，我们只需要维护常量空间。</li></ul>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> 代码随想录 </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-0027 移除元素</title>
      <link href="/2022/12/19/LeetCode-0027/"/>
      <url>/2022/12/19/LeetCode-0027/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。<br>不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并原地修改输入数组。<br>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。<br><a href="https://leetcode.com/problems/remove-element/">题目链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">示例 1: 给定 nums = [3,2,2,3], val = 3, 函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。 你不需要考虑数组中超出新长度后面的元素。</span><br><span class="line">示例 2: 给定 nums = [0,1,2,2,3,0,4,2], val = 2, 函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><h1 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h1><h2 id="暴力解法"><a href="#暴力解法" class="headerlink" title="暴力解法"></a>暴力解法</h2><p>两层for循环，一个for循环遍历数组元素 ，第二个for循环更新数组。<br>第一个for循环找到需要删除元素的位置，之后启动第二个for循环将其后的元素前移，然后size–。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(right &gt;= <span class="number">0</span> &amp;&amp; nums[right] == val) right--; <span class="comment">//将right移到从右数第一个值不为val的位置</span></span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[left] == val) &#123; <span class="comment">//left位置的元素需要移除</span></span><br><span class="line">                <span class="comment">//将right位置的元素移到left（覆盖），right位置移除</span></span><br><span class="line">                nums[left] = nums[right];</span><br><span class="line">                right--;</span><br><span class="line">            &#125;</span><br><span class="line">            left++;</span><br><span class="line">            <span class="keyword">while</span>(right &gt;= <span class="number">0</span> &amp;&amp; nums[right] == val) right--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>时间复杂度：O(n^2)</li><li>空间复杂度：O(1)</li></ul><h2 id="双指针法"><a href="#双指针法" class="headerlink" title="双指针法"></a>双指针法</h2><p>双指针法（快慢指针法）： 通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。<br>定义快慢指针</p><ul><li>快指针：寻找新数组的元素 ，新数组就是不含有目标元素的数组</li><li>慢指针：指向更新 新数组下标的位置<br>不断将快指针的元素赋给慢指针的位置从而实现向前位移覆盖需要删除的元素，最后以慢指针所致位置作为新数组的size。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">slowIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">fastIndex</span> <span class="operator">=</span> <span class="number">0</span>; fastIndex &lt; nums.length; fastIndex++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[fastIndex] != val) &#123;</span><br><span class="line">                nums[slowIndex] = nums[fastIndex];</span><br><span class="line">                slowIndex++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slowIndex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>时间复杂度：O(n)</li><li>空间复杂度：O(1)</li></ul>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> 代码随想录 </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-0704 二分查找</title>
      <link href="/2022/12/19/LeetCode-0704/"/>
      <url>/2022/12/19/LeetCode-0704/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。<br><a href="https://leetcode.com/problems/binary-search/">题目链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">示例 1:</span><br><span class="line">输入: nums = [-1,0,3,5,9,12], target = 9     </span><br><span class="line">输出: 4       </span><br><span class="line">解释: 9 出现在 nums 中并且下标为 4     </span><br><span class="line">示例 2:</span><br><span class="line">输入: nums = [-1,0,3,5,9,12], target = 2     </span><br><span class="line">输出: -1        </span><br><span class="line">解释: 2 不存在 nums 中因此返回 -1   </span><br></pre></td></tr></table></figure><p>提示：</p><ul><li>你可以假设 nums 中的所有元素是不重复的。</li><li>n 将在 [1, 10000]之间。</li><li>nums 的每个元素都将在 [-9999, 9999]之间。</li></ul><h1 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">lowIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">highIndex</span> <span class="operator">=</span> nums.length-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(lowIndex &lt;= highIndex)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">curIndex</span> <span class="operator">=</span> (lowIndex+highIndex)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[curIndex] == target)&#123;</span><br><span class="line">                <span class="keyword">return</span> curIndex;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[curIndex]&gt;target)&#123;</span><br><span class="line">                highIndex = curIndex - <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                lowIndex = curIndex + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><h2 id="左闭右闭-left-right"><a href="#左闭右闭-left-right" class="headerlink" title="左闭右闭 [left, right]"></a>左闭右闭 [left, right]</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="comment">// 避免当 target 小于nums[0] nums[nums.length - 1]时多次循环运算</span></span><br><span class="line">        <span class="keyword">if</span> (target &lt; nums[<span class="number">0</span>] || target &gt; nums[nums.length - <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + ((right - left) &gt;&gt; <span class="number">1</span>);<span class="comment">//此处这样写是为了防止数组很大时，left+right的值超出int类型最大值变为负数。value &gt;&gt; 1 == value / 2</span></span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target)</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target)</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target)</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="左闭右开-left-right"><a href="#左闭右开-left-right" class="headerlink" title="左闭右开 [left, right)"></a>左闭右开 [left, right)</h2> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = nums.length;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + ((right - left) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target)</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target)</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target)</span><br><span class="line">                right = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> 代码随想录 </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
